/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        General {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_GUI ESC  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB           &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_BRACKET
&kp LSHFT         &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &mt LEFT_ALT SQT
                                &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        Numbers {
            bindings = <
&mt LEFT_GUI GRAVE  &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_CLR        &out OUT_TOG        &kp KP_DIVIDE     &kp KP_MULTIPLY   &kp MINUS         &kp LS(KP_PLUS)  &kp EQUAL     &kp BACKSLASH
&kp TAB             &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5        &kp NUMBER_6      &kp N7            &kp NUMBER_8      &kp NUMBER_9     &kp NUMBER_0  &mt SLASH LS(SLASH)
&kp LSHIFT          &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(N9)       &kp LS(N0)    &kp LEFT_ALT
                                                        &trans            &trans            &trans              &trans            &trans            &trans
            >;
        };

        Navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_GUI  &kp F1  &kp F2   &kp F3   &kp F4   &kp C_VOLUME_UP      &kp BACKSPACE  &kp PAGE_UP  &kp UP    &kp PAGE_DOWN  &kp HOME      &kp INSERT
&kp TAB       &kp F5  &kp F6   &kp F7   &kp F8   &kp C_MUTE           &kp DELETE     &kp LEFT     &kp DOWN  &kp RIGHT      &kp END       &kp PRINTSCREEN
&kp LSHFT     &kp F9  &kp F10  &kp F11  &kp F12  &kp C_VOLUME_DOWN    &none          &none        &none     &none          &kp CAPSLOCK  &kp LEFT_ALT
                               &trans   &trans   &trans               &trans         &trans       &trans
            >;
        };
    };
};
